plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-parcelize"
    id "androidx.navigation.safeargs.kotlin"
    id "kotlin-kapt" // Required for annotation processing.
}

ext {
    glide_version = '4.14.2'
    lifecycle_version = "2.5.1"
    dagger_version = '2.44'
    retrofit_version = "2.9.0"
}

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.mendelin.catpedia"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "0.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"https://api.thecatapi.com/\""
        buildConfigField "String", "API_HEADER", "\"x-api-key\""
        buildConfigField "String", "API_KEY", "\"64f39d73-2f0a-4515-b192-7e5aa8e33ea2\""
        buildConfigField "String", "MOCKED_USER_NAME", "\"Pumpkin\""
        buildConfigField "String", "MOCKED_USER_PASSWORD", "\"catnip\""

        /* REST API endpoints */
        buildConfigField "String", "ENDPOINT_BREEDS", "\"v1/breeds\""
        buildConfigField "String", "ENDPOINT_SEARCH", "\"v1/images/search\""
        buildConfigField "String", "ENDPOINT_LOGIN", "\"v1/login.php\""

        /* REST API parameter names */
        buildConfigField "String", "QUERY_BREED_ID", "\"breed_id\""
        buildConfigField "String", "QUERY_SIZE", "\"size\""
        buildConfigField "String", "QUERY_USERNAME", "\"username\""
        buildConfigField "String", "QUERY_PASSWORD", "\"password\""

        dexOptions {
            javaMaxHeapSize "4g"
        }

        buildFeatures {
            dataBinding = true
            viewBinding = true
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "catpedia_${variant.buildType.name}_${defaultConfig.versionName}(${defaultConfig.versionCode}).apk"
        }
    }

    buildTypes {
        release {
            debuggable true
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/proguard/androidx-annotations.pro']
        }
    }

}

dependencies {
    /* Testing */
    implementation fileTree(dir: "libs", include: ["*.aar", "*.jar"], exclude: [])
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "junit:junit:4.13.2"

    /* AndroidX test */
    def androidx_test_version = "1.4.0"
    testImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"

    /* Architecture components testing */
    def androidx_arch_test_version = "2.1.0"
    testImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"

    /* JUnit5 testing */
    def junit_jupiter_version = '5.9.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    /* MOCKITO */
    def mockito_version = '4.8.0'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"

    /* Kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    /* Android libraries */
    implementation "androidx.core:core-ktx:1.9.0"
    implementation "androidx.appcompat:appcompat:1.5.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "com.google.android.material:material:1.6.1"
    implementation "androidx.security:security-crypto:1.1.0-alpha03"

    /* Navigation components */
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    /* LiveData, ViewModel */
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    /* Dagger 2 - Dependency Injection */
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    /* ReactiveX */
    implementation "io.reactivex.rxjava3:rxkotlin:3.0.1"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"

    /* Gson */
    implementation 'com.google.code.gson:gson:2.9.1'

    /* Retrofit networking library */
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"

    /* Timber logging */
    implementation "com.jakewharton.timber:timber:5.0.1"

    /* Image handling */
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:annotations:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
}